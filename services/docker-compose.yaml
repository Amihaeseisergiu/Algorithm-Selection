services:
  rabbitmq:
    image: rabbitmq:3.11.9-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=pass
    volumes:
      - ../docker_data/rabbitmq/data:/var/lib/rabbitmq
      - ../docker_data/rabbitmq/log:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 4s
      timeout: 20s
      retries: 3

  mongodb:
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGO_INITDB_DATABASE=algorithms
      - MONGODB_DATA_DIR=/data/db
      - MONGODB_LOG_DIR=/dev/null
    volumes:
      - ../docker_data/mongodb:/data/db

  web-service:
    build: ./web_service
    volumes:
      - ./web_service/src:/app/src
    ports:
      - 5000:5000
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  algorithm-selector-service:
    build: ./algorithm_selector
    volumes:
      - ./algorithm_selector/src:/app/src
    ports:
      - 5001:5000
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  networkx-service:
    build: ./networkx_service
    volumes:
      - ./networkx_service/src:/app/src
    ports:
      - 5002:5000
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure
  jgrapht-service:
    build: ./jgrapht_service
    volumes:
      - ./jgrapht_service/src:/app/src
    ports:
      - 5003:5000
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure
  graph4j-service:
    build: ./graph4j_service
    volumes:
      - ./graph4j_service/src:/app/src
    ports:
      - 5004:5000
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure