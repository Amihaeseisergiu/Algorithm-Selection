services:
  rabbitmq:
    image: rabbitmq:3.11.9-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=pass
   # volumes:
     # - ../docker_data/rabbitmq/data:/var/lib/rabbitmq
     # - ../docker_data/rabbitmq/log:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 4s
      timeout: 60s
      retries: 3

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGODB_DATA_DIR=/data/db
      - MONGODB_LOG_DIR=/dev/null
    volumes:
      - ../docker_data/mongodb:/data/db

  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.18.3
    ports:
      - 8080:8080
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      DISK_USE_READONLY_PERCENTAGE: 100
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: ''
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - ../docker_data/weaviate:/var/lib/weaviate

  web-service:
    build: ./web_service
    volumes:
      - ./web_service/src:/app/src
    ports:
      - 5000:5000
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  algorithm-selector-service:
    build: ./algorithm_selector_service
    volumes:
      - ./algorithm_selector_service/src:/app/src
    ports:
      - 5001:5000
    depends_on:
      rabbitmq:
        condition: service_healthy
      weaviate:
        condition: service_started
    restart: on-failure

  data-aggregator-service:
    build: ./data_aggregator_service
    volumes:
      - ./data_aggregator_service/src:/app/src
    ports:
      - 5002:5000
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_started
    restart: on-failure

  networkx-service:
    build: ./networkx_service
    volumes:
      - ./networkx_service/src:/app/src
    ports:
      - 5003:5000
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  jgrapht-service:
    build: ./jgrapht_service
    volumes:
      - ./jgrapht_service/src:/app/src
    ports:
      - 5004:5000
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  graph4j-service:
    build: ./graph4j_service
    volumes:
      - ./graph4j_service/src:/app/src
    ports:
      - 5005:5000
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure